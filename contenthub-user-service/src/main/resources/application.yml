server:
  port: 8001

spring:
  application:
    name: contenthub-user-service

  # 允许循环依赖（Sentinel与Spring MVC的兼容性）
  main:
    allow-circular-references: true

  # Nacos配置
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.200.130:8848
        username: nacos
        password: nacos
    # Sentinel配置
    sentinel:
      transport:
        dashboard: 192.168.200.130:8858  # Sentinel Dashboard地址
        port: 8719  # 应用与Dashboard通信的端口
      eager: true  # 立即启动Sentinel客户端
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.200.130:3306/content_hub?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000

  # Redis配置
  redis:
    host: 192.168.200.130
    port: 6379
    password: 654321
    database: 1  # 使用独立的数据库，避免与其他项目（yu.system）冲突
    timeout: 3000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

# MyBatis Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# SpringDoc配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  group-configs:
    - group: 用户服务API
      paths-to-match: /**
      packages-to-scan: com.contenthub.user.controller

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 604800
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从head中读取token
  is-read-head: true

# Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
